services:
  db:
    container_name: ticket-system-db
    image: postgres:14
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWD}
      - POSTGRES_DB=ticket-system-db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ticket-system-db'"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 1k
        max-file: 3
    networks:
      - ticket
  redis:
    container_name: ticket-redis
    build: 
      context: .
      dockerfile: ./redis_container/Dockerfile
    image: ticket-redis
    restart: always
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping" ] 
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 1k
        max-file: 3
    networks:
      - ticket
  ticket-mn-api:
    container_name: ticket-mn-api
    build: 
      context: .
      dockerfile: ./Dockerfile
      target: prod
    image: ticket-mn-api
    ports:
      - 3000:3000
    environment:
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION_MS=${JWT_ACCESS_TOKEN_EXPIRATION_MS}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_EXPIRATION_MS=${JWT_REFRESH_TOKEN_EXPIRATION_MS}
      - DB_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWD}@db:5432/ticket-system-db
      - NODE_ENV=dev
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    networks:
      - ticket
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: 1k
        max-file: 3
networks:
  ticket:
   name: ticket